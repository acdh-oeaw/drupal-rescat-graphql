schema {
  query: Query
  mutation: Mutation
}

########## QUERY ##########
type Query {
  project(id: Int!): Project
  projects(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): ProjectConnection!
  person(id: Int!): Person
  persons(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): PersonConnection!
  person_relations(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): PersonRelationConnection!  
  dataset(id: Int!): Dataset
  datasets(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): DatasetConnection!
  dataset_instance(id: Int!): DatasetInstance
  dataset_instances(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): DatasetInstanceConnection!
  institution(id: Int!): Institution
  institutions(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): InstitutionConnection!   
  taxonomies(
    offset: Int = 0
    limit: Int = 10
    name: String
  ): TaxonomyConnection!
}

########## TYPE ##########

type Relation {
  id: Int
  name: String
}

type identifierService {
  id: Int
  name: String
}

##### Taxonomy #####
type Taxonomy  {
  id: Int!
  headline: String
  name: String
}

type TaxonomyConnection {
  total: Int!
  items: [Taxonomy!]    
}

##### Person #####

type Person implements NodeInterface {
  id: Int!
  title: String 
  identifierRelations: [Paragraph]!
}


type PersonConnection {
  total: Int!
  items: [Person!]
}

type PersonRelation implements Paragraph {
  id: Int!
  uuid: String
  relation: [Relation]
  person: [Person]
  institution: [Institution]
}

type PersonRelationConnection {
  total: Int!
  items: [PersonRelation!]
}

type IdentifierRelation implements Paragraph {
  id: Int!
  uuid: String
  relation: [Relation]
  identifierService: [Relation]
  value: String
  label: String
}

##### Project #####

type Project implements NodeInterface {
  id: Int!
  title: String
  description: String
  redmineId: Int  
  personRelations: [Paragraph]!
  institutionRelations: [Paragraph]!
  startDate: String
  endDate: String
  datasetRelations: [Paragraph]!
}

type ProjectConnection {
  total: Int!
  items: [Project!]
}

type ProjectRelation implements Paragraph {
  id: Int!
  uuid: String
  relation: [Relation]
  project: [Project]
}

##### Institution #####

type Institution implements NodeInterface {
  id: Int!
  title: String
  identifierRelations: [Paragraph]!
}

type InstitutionConnection {
  total: Int!
  items: [Institution!]    
}

type InstitutionRelation implements Paragraph {
  id: Int!
  uuid: String
  institution: [Institution]
}

##### Dataset #####

type Dataset implements NodeInterface {
  id: Int!
  title: String
  description: String
  redmineId: Int
  personRelations: [Paragraph]!
  projectRelations: [Paragraph]!
}

type DatasetConnection {
  total: Int!
  items: [Dataset!]
}

type DatasetRelation implements Paragraph {
  id: Int!
  uuid: String
  dataset: [Dataset]!
}

##### DatasetInstance #####

type DatasetInstance implements NodeInterface {
  id: Int!
  headline: String
  harvestingStatus: String
  lastHarvestDate: String
  license: String  
  locationUri: String
  locationTitle: String
  size: Int
}

type DatasetInstanceConnection {
  total: Int!
  items: [DatasetInstance!]
}


type Mutation

scalar Violation


############### INPUT ###############

##### Person #####

input PersonInput {
  title: String!
  description: String
  identifiers: String
}

input PersonDeleteInput {
    id: Int!
}

input PersonUpdateInput {
  id: Int!
  title: String!
  description: String
  identifiers: String
}

##### Institution #####

input InstitutionInput {
  title: String!
  identifiers: String
}

input InstitutionDeleteInput {
    id: Int!
}

input InstitutionUpdateInput {
  id: Int!
  title: String!
  description: String
  identifiers: String
}


##### DatasetInstance #####

input DatasetInstanceInput {
  headline: String!
  harvestingStatus: String
  description: String
  lastHarvestDate: String
  license: String
  locationTitle: String
  locationUri: String
  size: Int
}

input DatasetInstanceUpdateInput {
  id: Int!
  headline: String
  harvestingStatus: String
  description: String
  lastHarvestDate: String
  license: String
  locationTitle: String
  locationUri: String
  size: Int
}

input DatasetInstanceDeleteInput {
  id: Int!
}

##### Dataset  #####

input DatasetInput {
  headline: String!
  description: String
  projectId: Int
  redmineId: Int
}

input DatasetDeleteInput {
  id: Int!
}

input DatasetUpdateInput {
  id: Int!  
  headline: String
  description: String
  projectId: Int
  redmineId: Int
}
 
##### Project #####

input ProjectInput {
  headline: String!
  description: String
  endDate: String
  startDate: String
  redmineId: Int
}

input ProjectUpdateInput {
  id: Int!
  headline: String
  description: String
  endDate: String
  startDate: String
  redmineId: Int
}

input ProjectDeleteInput {
  id: Int!
}

##### Relations #####

input PersonRelationInput {
  target_id: Int!
  parent_id: Int!  
  relation_id: Int!  
}

input PersonRelationDeleteInput {
  id: Int!  
  target_id: Int!
}

input PersonRelationUpdateInput {
  target_id: Int!
  parent_id: Int! 
  relation_id: Int!  
}

input InstitutionRelationInput {
  target_id: Int!
  parent_id: Int! 
  relation_id: Int!  
}

input InstitutionRelationUpdateInput {
  target_id: Int!
  parent_id: Int! 
  relation_id: Int!  
}

input InstitutionRelationDeleteInput {
  id: Int!
}

input DatasetRelationInput {
  target_id: Int!
  parent_id: Int!  
}

input DatasetRelationUpdateInput {
  target_id: Int!
  parent_id: Int!  
}

input DatasetRelationDeleteInput {
  id: Int!  
  target_id: Int!  
}


##### Interface #####

interface Paragraph {
  id: Int!
}

interface NodeInterface {
  id: Int!
}

