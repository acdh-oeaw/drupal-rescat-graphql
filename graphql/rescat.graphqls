schema {
  query: Query
  mutation: Mutation
}

type Query {
  project(id: Int!): Project
  projects(
    offset: Int = 0
    limit: Int = 10
  ): ProjectConnection!
  person(id: Int!): Person
  persons(
    offset: Int = 0
    limit: Int = 10
  ): PersonConnection!
  dataset(id: Int!): Dataset
  datasets(
    offset: Int = 0
    limit: Int = 10
  ): DatasetConnection!
  dataset_instance(id: Int!): DatasetInstance
  dataset_instances(
    offset: Int = 0
    limit: Int = 10
  ): DatasetInstanceConnection!
  institution(id: Int!): Institution
  institutions(
    offset: Int = 0
    limit: Int = 10
  ): InstitutionConnection!   

}

type Project implements NodeInterface {
  id: Int!
  headline: String
  description: String  
  startDate: String
  endDate: String
  redmineId: Int
  datasets: [Dataset]
  affilatedInstitutions: [Institution]
  contributors: [Person]
  principalInvestigators: [Person]
}

type ProjectConnection {
  total: Int!
  items: [Project!]
}

type Person implements NodeInterface {
  id: Int!
  title: String
  identifiers: String
}

type PersonConnection {
  total: Int!
  items: [Person!]
}

type InstitutionsTerm {
  id: String
  title: String
  link: String
}

type PersonTerm {
  id: String
  title: String
  identifiers: String
}

type DatasetTerm {
  id: String
  title: String
  description: String
  harvestingStatus: String
  lastHarvestDate: String
  license: String
  locationUri: String
  locationTitle: String
  contributors: [Person]
  size: Int
}


type Dataset implements NodeInterface {
  id: Int!
  title: String
  datasetInstance: [DatasetInstance]
}

type DatasetConnection {
  total: Int!
  items: [Dataset!]
}

type DatasetInstance implements NodeInterface {
  id: Int!
  headline: String
  description: String
  harvestingStatus: String
  lastHarvestDate: String
  license: String  
  locationUri: String
  locationTitle: String
  contributors: [Person]
  size: Int
}

type DatasetInstanceConnection {
  total: Int!
  items: [DatasetInstance!]
}

type Institution implements NodeInterface {
  id: Int!
  title: String
  identifiers: String
  description: String
}

type InstitutionConnection {
  total: Int!
  items: [Institution!]    
}

interface NodeInterface {
  id: Int!
}

type Mutation

scalar Violation

input PersonInput {
  title: String!
  description: String
}

input InstitutionInput {
  title: String!
  identifiers: String
}

input DatasetInstanceInput {
  headline: String!
  harvestingStatus: String
  description: String
  lastHarvestDate: String
  license: String
  locationTitle: String
  locationUri: String
  size: Int
}
