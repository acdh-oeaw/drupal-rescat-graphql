schema {
  query: Query
  mutation: Mutation
}

########## QUERY ##########
type Query {
  project(id: Int!): Project
  projects(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): ProjectConnection!
  person(id: Int!): Person
  persons(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): PersonConnection!
  person_relations(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): PersonRelationConnection!  
  dataset(id: Int!): Dataset
  datasets(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): DatasetConnection!
  dataset_instance(id: Int!): DatasetInstance
  dataset_instances(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): DatasetInstanceConnection!
  institution(id: Int!): Institution
  institutions(
    offset: Int = 0
    limit: Int = 10
    title: String
  ): InstitutionConnection!   
  entity_relations(
    offset: Int = 0
    limit: Int = 10
    name: String
  ): TaxonomyConnection!
  identifier_services(
    offset: Int = 0
    limit: Int = 10
    name: String
  ): TaxonomyConnection!
  project_statuses(
    offset: Int = 0
    limit: Int = 10
    name: String
  ): TaxonomyConnection!
}

########## TYPE ##########

type Relation {
  id: Int
  name: String
}

type IdentifierService {
  id: Int
  name: String
}

##### Taxonomy #####
type Taxonomy  {
  id: Int!
  headline: String
  name: String
}

type TaxonomyConnection {
  total: Int!
  items: [Taxonomy!]    
}

##### Person #####

type Person implements NodeInterface {
  id: Int!
  title: String 
  identifierRelations: [Paragraph]!
}


type PersonConnection {
  total: Int!
  items: [Person!]
}

type PersonRelation implements Paragraph {
  id: Int!
  uuid: String
  relation: [Relation]
  person: [Person]
  institution: [Institution]
  start: String
  end: String
}

type PersonRelationConnection {
  total: Int!
  items: [PersonRelation!]
}

type IdentifierRelation implements Paragraph {
  id: Int!
  uuid: String
  relation: [Relation]
  identifierService: [Relation]
  value: String
  label: String
}

##### Project #####

type Project implements NodeInterface {
  id: Int!
  title: String
  description: String
  shortName: String
  startDate: String
  endDate: String  
  status: [Taxonomy]!
  personRelations: [Paragraph]!
  institutionRelations: [Paragraph]!
  identifierRelations: [Paragraph]!
  datasets: [Dataset]
}

type ProjectConnection {
  total: Int!
  items: [Project!]
}

type ProjectRelation implements Paragraph {
  id: Int!
  uuid: String
  project: [Project]!
  relation: [Relation]!
}


##### Institution #####

type Institution implements NodeInterface {
  id: Int!
  title: String
  acronyms: String
  identifierRelations: [Paragraph]!
}

type InstitutionConnection {
  total: Int!
  items: [Institution!]    
}

type InstitutionRelation implements Paragraph {
  id: Int!
  uuid: String
  institution: [Institution]
  start: String
  end: String
}

##### Dataset #####

type Dataset implements NodeInterface {
  id: Int!
  title: String
  description: String
  redmineId: Int
  personRelations: [Paragraph]!
  projectRelations: [Paragraph]!
  identifierRelations: [Paragraph]!
}

type DatasetConnection {
  total: Int!
  items: [Dataset!]
}

type DatasetRelation implements Paragraph {
  id: Int!
  uuid: String
  dataset: [Dataset]!
  relation: [Relation]!
}

##### DatasetInstance #####

type DatasetInstance implements NodeInterface {
  id: Int!
  locationPath: String
  notes: String
  harvestStatus: String
  harvestDate: String
  harvestReport: String
  size: Int  
  filesCount: Int  
  datasetRelations: [Paragraph]!
  personRelations: [Paragraph]!
}

type DatasetInstanceConnection {
  total: Int!
  items: [DatasetInstance!]
}


type Mutation

scalar Violation


##### Interface #####

interface Paragraph {
  id: Int!
}

interface NodeInterface {
  id: Int!
}

